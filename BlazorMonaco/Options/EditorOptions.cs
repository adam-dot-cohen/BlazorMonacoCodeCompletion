namespace BlazorMonaco.Options
{
    public class EditorOptions
    {
        public bool? AcceptSuggestionOnCommitCharacter { get; set; }
        public string AcceptSuggestionOnEnter { get; set; }
        public string AccessibilityHelpUrl { get; set; }
        public int? AccessibilityPageSize { get; set; }
        public string AccessibilitySupport { get; set; }
        public string AriaLabel { get; set; }
        public string AutoClosingBrackets { get; set; }
        public string AutoClosingOvertype { get; set; }
        public string AutoClosingQuotes { get; set; }
        public bool? AutoIndent { get; set; }
        public string AutoSurround { get; set; }
        public bool? AutomaticLayout { get; set; }
        public int? CodeActionsOnSaveTimeout { get; set; }
        public bool? CodeLens { get; set; }
        public bool? ColorDecorators { get; set; }
        public CommentOptions Comments { get; set; }
        public bool? Contextmenu { get; set; }
        public bool? CopyWithSyntaxHighlighting { get; set; }
        public string CursorBlinking { get; set; }
        public bool? CursorSmoothCaretAnimation { get; set; }
        public string CursorStyle { get; set; }
        public int? CursorSurroundingLines { get; set; }
        public string CursorSurroundingLinesStyle { get; set; }
        public int? CursorWidth { get; set; }
        public bool? DetectIndentation { get; set; }
        public Dimension Dimension { get; set; }
        public bool? DisableLayerHinting { get; set; }
        public bool? DisableMonospaceOptimizations { get; set; }
        public bool? DragAndDrop { get; set; }
        public bool? EmptySelectionClipboard { get; set; }
        public string ExtraEditorClassName { get; set; }
        public int? FastScrollSensitivity { get; set; }
        public FindOptions Find { get; set; }
        public bool? FixedOverflowWidgets { get; set; }
        public bool? Folding { get; set; }
        public bool? FoldingHighlight { get; set; }
        public string FoldingStrategy { get; set; }
        public string FontFamily { get; set; }
        public bool? FontLigatures { get; set; }
        public int? FontSize { get; set; }
        public string FontWeight { get; set; }
        public bool? FormatOnPaste { get; set; }
        public bool? FormatOnType { get; set; }
        public bool? GlyphMargin { get; set; }
        public GotoLocationOptions GotoLocation { get; set; }
        public bool? HideCursorInOverviewRuler { get; set; }
        public bool? HighlightActiveIndentGuide { get; set; }
        public HoverOptions Hover { get; set; }
        public bool? InDiffEditor { get; set; }
        public bool? InsertSpaces { get; set; }
        public string Language { get; set; }
        public bool? LargeFileOptimizations { get; set; }
        public int? LetterSpacing { get; set; }
        public LightbulbOptions Lightbulb { get; set; }
        public string LineDecorationsWidth { get; set; }
        public int? LineHeight { get; set; }
        public string LineNumbers { get; set; }
        public int? LineNumbersMinChars { get; set; }
        public bool? Links { get; set; }
        public bool? MatchBrackets { get; set; }
        public int? MaxTokenizationLineLength { get; set; }
        public MinimapOptions Minimap { get; set; }
        public TextModel Model { get; set; }
        public string MouseStyle { get; set; }
        public int? MouseWheelScrollSensitivity { get; set; }
        public bool? MouseWheelZoom { get; set; }
        public bool? MultiCursorMergeOverlapping { get; set; }
        public string MultiCursorModifier { get; set; }
        public string MultiCursorPaste { get; set; }
        public bool? OccurrencesHighlight { get; set; }
        public bool? OverviewRulerBorder { get; set; }
        public int? OverviewRulerLanes { get; set; }
        public ParameterHintOptions ParameterHints { get; set; }
        public bool? PeekWidgetDefaultFocus { get; set; }
        public QuickSuggestionsOptions QuickSuggestions { get; set; }
        public int? QuickSuggestionsDelay { get; set; }
        public bool? ReadOnly { get; set; }
        public bool? RenderControlCharacters { get; set; }
        public bool? RenderFinalNewline { get; set; }
        public bool? RenderIndentGuides { get; set; }
        public string RenderLineHighlight { get; set; }
        public string RenderValidationDecorations { get; set; }
        public string RenderWhitespace { get; set; }
        public int? RevealHorizontalRightPadding { get; set; }
        public bool? RoundedSelection { get; set; }
        public int[] Rulers { get; set; }
        public int? ScrollBeyondLastColumn { get; set; }
        public bool? ScrollBeyondLastLine { get; set; }
        public ScrollbarOptions Scrollbar { get; set; }
        public bool? SelectOnLineNumbers { get; set; }
        public bool? SelectionClipboard { get; set; }
        public bool? SelectionHighlight { get; set; }
        public string ShowFoldingControls { get; set; }
        public bool? ShowUnused { get; set; }
        public bool? SmoothScrolling { get; set; }
        public string SnippetSuggestions { get; set; }
        public bool? StablePeek { get; set; }
        public int? StopRenderingLineAfter { get; set; }
        public SuggestOptions Suggest { get; set; }
        public int? SuggestFontSize { get; set; }
        public int? SuggestLineHeight { get; set; }
        public bool? SuggestOnTriggerCharacters { get; set; }
        public string SuggestSelection { get; set; }
        public string TabCompletion { get; set; }
        public int? TabSize { get; set; }
        public string Theme { get; set; }
        public bool? TrimAutoWhitespace { get; set; }
        public bool? UseTabStops { get; set; }
        public string Value { get; set; }
        public bool? WordBasedSuggestions { get; set; }
        public string WordSeparators { get; set; }
        public string WordWrap { get; set; }
        public string WordWrapBreakAfterCharacters { get; set; }
        public string WordWrapBreakBeforeCharacters { get; set; }
        public int? WordWrapColumn { get; set; }
        public bool? WordWrapMinified { get; set; }
        public string WrappingIndent { get; set; }
        public string WrappingStrategy { get; set; }
    }
}
